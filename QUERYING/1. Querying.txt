# Querying
----------

* Introduction
--------------
Databases (and SQL) are tools that can be used to iteract with, store, and manage information.

Software for organizing information in spreadsheets:
	. Apple Numbers
	. Google Sheets
	. Microsoft Excel

Why are we moving in this course from spreadsheet software to dabatases?
	. Scale ---> For example to millions of data
	. Frequency ---> Ability to update the data
	. Speed ---> Finding a particular piece of information faster than with a spreadsheet.

	. Scale
	. Frequency
	. Speed

-------------------------------------------------------------------------------------------------------------------------------------------------------------------

* What is a database?
---------------------

. Database ---> A collection of data organized for creating, reading, updating, and deleting.

. Database Management System ---> Software via which you can interact with a database.
	. GUI
	. Terminal

	. MySQL ---------->
	. Oracle          | ---> More heavier weight but more fully featured.
	. PostgreSQL ----->	
	. SQLite ---------> Lighter and allows you to do most of the same work than the others.

	Other Database Management Systems include.
		. Microsoft Access
		. MongoDB

------------------------------------------------------------------------------------------------------------------------------------------------------------------

* SQL
-----
A language viah which you can create, read, update, and delete data in a database.

Structured Query Language.

Querying ---> 
Ex: What's the most liked post in our platform?
    Is our number of daily users growing or shrinking?
    Which songs are the most like the song a user just played?

-------------------------------------------------------------------------------------------------------------------------------------------------------------------

* Getting Started with SQLite
-----------------------------
VS Code
SQLite

SQLite can be used in: 
	. Mobile Apps.
	. Desktop Apps.
	. Web Apps.

For opening the database called longlist.db

$sqlite3 longlist.db

* SELECT
--------
A way to select some rows in a table inside of my database.

sqlite> SELECT * FROM "longlist"; --> This command selects all the rows from a table.

sqlite> SELECT "title" FROM "longlist"; --> This command selects a particular column from a table.

sqlite> SELECT "title", "author" FROM "longlist"; --> This command selects more than one column.

Good practice: Use double quotes for colum names, and single quotes for string names.

------------------------------------------------------------------------------------------------------------------------------------------------------------------

* LIMIT
-------
sqlite> SELECT "title" FROM "longlist" LIMIT 10;

sqlite> SELECT "title" FROM "longlist" LIMIT 5;

------------------------------------------------------------------------------------------------------------------------------------------------------------------

* WHERE
-------
Let me retrieve some rows WHERE some condition is true.

Often combined with other conditions.

sqlite> SELECT "title", "author" FROM "longlist" WHERE "year" = 2023;

sqlite> SELECT "title", "format" FROM "longlist" WHERE "format" != 'hardcover';

sqlite> SELECT "title", "format" FROM "longlist" WHERE "format" <> 'hardcover'; ---> <> this symbol also represents not equal !=

------------------------------------------------------------------------------------------------------------------------------------------------------------------

* NOT
-----
sqlite> SELECT "title", "format" FROM "longlist" WHERE NOT "format" = 'hardcover';

------------------------------------------------------------------------------------------------------------------------------------------------------------------

* AND, OR, ()
-------------
sqlite> SELECT "title", "author" FROM "longlist" WHERE "year" = 2022 OR "year" = 2023;

sqlite> SELECT "title", "format" FROM "longlist" WHERE ("year" = 2022 OR "year" = 2023) AND "format" != 'hardcover';

------------------------------------------------------------------------------------------------------------------------------------------------------------------

* NULL
------
This is something that is not being there.

IS NULL
IS NOT NULL

sqlite> SELECT "title", "translator" FROM "longlist" WHERE "translator" IS NULL;

sqlite> SELECT "title", "translator" FROM "longlist" WHERE "translator" IS NOT NULL;

-------------------------------------------------------------------------------------------------------------------------------------------------------------------

* LIKE
------
This is used to roughly match some string in my database.

LIKE becomes powerful when combined with % and _

% --> Can match any character.

_ --> Can match any symbol character.

Example:
--------
sqlite> SELECT "title" FROM "longlist" WHERE "title" LIKE '%love%'; --> Will match anything that has love before or after.







































































































